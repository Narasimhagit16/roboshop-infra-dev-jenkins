pipeline {
    agent {
        node {
            label 'AGENT-1'
        }
    }
    parameters {

        choice(name: 'action', choices: ['alply', 'destroy'])

        
    }
    options {
        timeout(time: 1, unit : 'HOURS')
        disableConcurrentBuilds()
        ansiColor('xterm')
        
    }
    stages{
    stage('Init') {
            steps {
                sh """
                  cd 01-vpc
                  terraform init
                """
            }
        }
    stage('Plan') {
            steps {
                sh """
                  cd 01-vpc
                  terraform plan
                """
            }
        }

    stage('Apply') {
            when {
            expression{
                params.action== 'apply'

            }
        }
        input {
            message "Should we continue?"
            ok "Yes, we should."
        }
            steps {
                sh """
                  cd 01-vpc
                  terraform apply -auto-approve
                """
            }
        }
    stage('Destroy') {
        when {
            expression{
                params.action == 'destroy'

            }
        }

        input {
            message "Should we continue?"
            ok "Yes, we should."
        }
            steps {
                sh """
                  cd 01-vpc
                  terraform destroy -auto-approve
                """
            }
        }
    }
    post { 
        always { 
            echo 'I will always say Hello again Narasimha!'
        }
        failure { 
            echo 'Pipeline failed!'
        }
        success { 
            echo 'I will always say when success'
        } 
    }
 }
